[2025-06-02 02:09:55.158] [info] { IS_ROCKSTEADY: false, EDITION: 'WriterSolo-Desktop' }
[2025-06-02 02:09:55.249] [info] {}
[2025-06-02 02:09:55.249] [info] { IS_PRODUCTION: true }
[2025-06-02 02:09:55.290] [info] App starting ...
[2025-06-02 02:09:55.291] [info] Checking for update
[2025-06-02 02:09:55.292] [info] Checking for update...
[2025-06-02 02:09:55.292] [info] undefined
[2025-06-02 02:09:55.529] [info] Serving files for production
[2025-06-02 02:09:55.530] [info] Serving files for production
[2025-06-02 02:09:55.536] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-02 02:09:55.537] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-02 02:09:55.667] [info] Checking for update (already in progress)
[2025-06-02 02:09:55.677] [error] Error: Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-02 02:09:55.677] [info] Error in auto-updater. Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-02 02:09:55.680] [info] {
  mainWindow: {
    setBounds: '[function] (e,...r)=>{e={...this.getBounds(),...e},t.call(this,e,...r)}',
    _events: {
      blur: '[function] t=>{e.emit("browser-window-blur",t,this)}',
      focus: [
        '[function] t=>{e.emit("browser-window-focus",t,this)}',
        '[function] function(arg) {\n' +
          '      focusedWindow = w;\n' +
          '      updateDarwinAppMenu();\n' +
          '      saveWindowRect(getWindowRect(w));\n' +
          '      var index = getWindowIndex(w);\n' +
          '      if (index !== -1 && windows[index].projectCode !== undefined) {\n' +
          '        // Sending this IPC command before the window is ready breaks it\n' +
          '        // somehow.  (i.e. If we unconditionally send it to windows that\n' +
          '        // are focused, then a new window will have a broken __dirname.)\n' +
          '        w.webContents.send("set-active-project-cookie");\n' +
          '      }\n' +
          '    }'
      ],
      show: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      hide: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      minimize: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      maximize: [
        '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
        '[function] function() {\n      multiLog("windowMaximized!; ");\n    }'
      ],
      restore: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      unmaximize: '[function] function() {\n      multiLog("windowUnMaximized!; ");\n    }',
      closed: '[function] function() {\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1) windows.splice(index, 1);\n' +
        '      if (focusedWindow === w) focusedWindow = null;\n' +
        '      updateDarwinAppMenu();\n' +
        '      fireOpenScriptsChanged();\n' +
        '    }',
      close: '[function] function(event) {\n' +
        '      multiLog("Closing...");\n' +
        '      console.log({ w, focusedWindow });\n' +
        '      if (w === focusedWindow) {\n' +
        '        multiLog("Saving Window Rect!");\n' +
        '        saveWindowRect(getWindowRect(w));\n' +
        '      }\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1 && !windows[index].isClosingForcibly) {\n' +
        '        w.webContents.send("try-close-window");\n' +
        '        event.preventDefault();\n' +
        '      }\n' +
        '    }'
    },
    _eventsCount: 10,
    devToolsWebContents: null
  }
}
[2025-06-02 02:09:55.682] [info] autoDownload re-enabled!
[2025-06-02 02:09:55.717] [info] {
  windowRect: {
    x: 137,
    y: 59,
    width: 1263,
    height: 726,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-02 02:09:56.326] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-02 02:09:56.328] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-02 02:10:04.234] [info] {
  windowRect: {
    x: 137,
    y: 59,
    width: 1263,
    height: 726,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-02 02:10:42.544] [info] {
  windowRect: {
    x: 137,
    y: 59,
    width: 1263,
    height: 726,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-02 02:11:20.087] [info] Closing...
[2025-06-02 02:11:20.098] [info] Saving Window Rect!
[2025-06-02 02:11:20.102] [info] {
  windowRect: {
    x: 137,
    y: 59,
    width: 1263,
    height: 726,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-02 02:11:23.330] [info] Closing...
[2025-06-02 02:11:23.331] [info] Saving Window Rect!
[2025-06-02 02:11:23.332] [info] {
  windowRect: {
    x: 137,
    y: 59,
    width: 1263,
    height: 726,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:07:56.642] [info] { IS_ROCKSTEADY: false, EDITION: 'WriterSolo-Desktop' }
[2025-06-05 02:07:56.729] [info] {}
[2025-06-05 02:07:56.730] [info] { IS_PRODUCTION: true }
[2025-06-05 02:07:56.774] [info] App starting ...
[2025-06-05 02:07:56.775] [info] Checking for update
[2025-06-05 02:07:56.775] [info] Checking for update...
[2025-06-05 02:07:56.776] [info] undefined
[2025-06-05 02:07:57.013] [info] Serving files for production
[2025-06-05 02:07:57.013] [info] Serving files for production
[2025-06-05 02:07:57.020] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 02:07:57.021] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 02:07:57.146] [info] Checking for update (already in progress)
[2025-06-05 02:07:57.158] [error] Error: Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 02:07:57.159] [info] Error in auto-updater. Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 02:07:57.161] [info] {
  mainWindow: {
    setBounds: '[function] (e,...r)=>{e={...this.getBounds(),...e},t.call(this,e,...r)}',
    _events: {
      blur: '[function] t=>{e.emit("browser-window-blur",t,this)}',
      focus: [
        '[function] t=>{e.emit("browser-window-focus",t,this)}',
        '[function] function(arg) {\n' +
          '      focusedWindow = w;\n' +
          '      updateDarwinAppMenu();\n' +
          '      saveWindowRect(getWindowRect(w));\n' +
          '      var index = getWindowIndex(w);\n' +
          '      if (index !== -1 && windows[index].projectCode !== undefined) {\n' +
          '        // Sending this IPC command before the window is ready breaks it\n' +
          '        // somehow.  (i.e. If we unconditionally send it to windows that\n' +
          '        // are focused, then a new window will have a broken __dirname.)\n' +
          '        w.webContents.send("set-active-project-cookie");\n' +
          '      }\n' +
          '    }'
      ],
      show: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      hide: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      minimize: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      maximize: [
        '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
        '[function] function() {\n      multiLog("windowMaximized!; ");\n    }'
      ],
      restore: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      unmaximize: '[function] function() {\n      multiLog("windowUnMaximized!; ");\n    }',
      closed: '[function] function() {\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1) windows.splice(index, 1);\n' +
        '      if (focusedWindow === w) focusedWindow = null;\n' +
        '      updateDarwinAppMenu();\n' +
        '      fireOpenScriptsChanged();\n' +
        '    }',
      close: '[function] function(event) {\n' +
        '      multiLog("Closing...");\n' +
        '      console.log({ w, focusedWindow });\n' +
        '      if (w === focusedWindow) {\n' +
        '        multiLog("Saving Window Rect!");\n' +
        '        saveWindowRect(getWindowRect(w));\n' +
        '      }\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1 && !windows[index].isClosingForcibly) {\n' +
        '        w.webContents.send("try-close-window");\n' +
        '        event.preventDefault();\n' +
        '      }\n' +
        '    }'
    },
    _eventsCount: 10,
    devToolsWebContents: null
  }
}
[2025-06-05 02:07:57.168] [info] autoDownload re-enabled!
[2025-06-05 02:07:57.204] [info] {
  windowRect: {
    x: 136,
    y: 88,
    width: 1266,
    height: 729,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:07:57.517] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 02:07:57.522] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 02:08:05.114] [info] Closing...
[2025-06-05 02:08:05.122] [info] Saving Window Rect!
[2025-06-05 02:08:05.125] [info] {
  windowRect: {
    x: 136,
    y: 88,
    width: 1266,
    height: 729,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:08:07.224] [info] Closing...
[2025-06-05 02:08:07.229] [info] Saving Window Rect!
[2025-06-05 02:08:07.231] [info] {
  windowRect: {
    x: 136,
    y: 88,
    width: 1266,
    height: 729,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:11:18.863] [info] { IS_ROCKSTEADY: false, EDITION: 'WriterSolo-Desktop' }
[2025-06-05 02:11:18.945] [info] {}
[2025-06-05 02:11:18.945] [info] { IS_PRODUCTION: true }
[2025-06-05 02:11:18.988] [info] App starting ...
[2025-06-05 02:11:18.988] [info] Checking for update
[2025-06-05 02:11:18.989] [info] Checking for update...
[2025-06-05 02:11:18.989] [info] undefined
[2025-06-05 02:11:19.195] [info] Serving files for production
[2025-06-05 02:11:19.196] [info] Serving files for production
[2025-06-05 02:11:19.204] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 02:11:19.205] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 02:11:19.329] [info] Checking for update (already in progress)
[2025-06-05 02:11:19.341] [error] Error: Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 02:11:19.342] [info] Error in auto-updater. Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 02:11:19.346] [info] {
  mainWindow: {
    setBounds: '[function] (e,...r)=>{e={...this.getBounds(),...e},t.call(this,e,...r)}',
    _events: {
      blur: '[function] t=>{e.emit("browser-window-blur",t,this)}',
      focus: [
        '[function] t=>{e.emit("browser-window-focus",t,this)}',
        '[function] function(arg) {\n' +
          '      focusedWindow = w;\n' +
          '      updateDarwinAppMenu();\n' +
          '      saveWindowRect(getWindowRect(w));\n' +
          '      var index = getWindowIndex(w);\n' +
          '      if (index !== -1 && windows[index].projectCode !== undefined) {\n' +
          '        // Sending this IPC command before the window is ready breaks it\n' +
          '        // somehow.  (i.e. If we unconditionally send it to windows that\n' +
          '        // are focused, then a new window will have a broken __dirname.)\n' +
          '        w.webContents.send("set-active-project-cookie");\n' +
          '      }\n' +
          '    }'
      ],
      show: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      hide: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      minimize: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      maximize: [
        '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
        '[function] function() {\n      multiLog("windowMaximized!; ");\n    }'
      ],
      restore: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      unmaximize: '[function] function() {\n      multiLog("windowUnMaximized!; ");\n    }',
      closed: '[function] function() {\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1) windows.splice(index, 1);\n' +
        '      if (focusedWindow === w) focusedWindow = null;\n' +
        '      updateDarwinAppMenu();\n' +
        '      fireOpenScriptsChanged();\n' +
        '    }',
      close: '[function] function(event) {\n' +
        '      multiLog("Closing...");\n' +
        '      console.log({ w, focusedWindow });\n' +
        '      if (w === focusedWindow) {\n' +
        '        multiLog("Saving Window Rect!");\n' +
        '        saveWindowRect(getWindowRect(w));\n' +
        '      }\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1 && !windows[index].isClosingForcibly) {\n' +
        '        w.webContents.send("try-close-window");\n' +
        '        event.preventDefault();\n' +
        '      }\n' +
        '    }'
    },
    _eventsCount: 10,
    devToolsWebContents: null
  }
}
[2025-06-05 02:11:19.353] [info] autoDownload re-enabled!
[2025-06-05 02:11:19.372] [info] {
  windowRect: {
    x: 136,
    y: 93,
    width: 1268,
    height: 731,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:11:19.691] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 02:11:19.695] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 02:11:24.377] [info] Closing...
[2025-06-05 02:11:24.380] [info] Saving Window Rect!
[2025-06-05 02:11:24.380] [info] {
  windowRect: {
    x: 136,
    y: 93,
    width: 1268,
    height: 731,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:11:24.529] [info] Closing...
[2025-06-05 02:11:24.532] [info] Saving Window Rect!
[2025-06-05 02:11:24.533] [info] {
  windowRect: {
    x: 136,
    y: 93,
    width: 1268,
    height: 731,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 02:11:25.069] [info] Closing...
[2025-06-05 02:11:25.071] [info] Saving Window Rect!
[2025-06-05 02:11:25.071] [info] {
  windowRect: {
    x: 136,
    y: 93,
    width: 1268,
    height: 731,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 11:09:46.466] [info] { IS_ROCKSTEADY: false, EDITION: 'WriterSolo-Desktop' }
[2025-06-05 11:09:46.559] [info] {}
[2025-06-05 11:09:46.559] [info] { IS_PRODUCTION: true }
[2025-06-05 11:09:46.608] [info] App starting ...
[2025-06-05 11:09:46.609] [info] Checking for update
[2025-06-05 11:09:46.610] [info] Checking for update...
[2025-06-05 11:09:46.610] [info] undefined
[2025-06-05 11:09:46.872] [info] Serving files for production
[2025-06-05 11:09:46.873] [info] Serving files for production
[2025-06-05 11:09:46.882] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 11:09:46.883] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-05 11:09:47.049] [info] Checking for update (already in progress)
[2025-06-05 11:09:47.065] [error] Error: Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 11:09:47.066] [info] Error in auto-updater. Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-05 11:09:47.068] [info] {
  mainWindow: {
    setBounds: '[function] (e,...r)=>{e={...this.getBounds(),...e},t.call(this,e,...r)}',
    _events: {
      blur: '[function] t=>{e.emit("browser-window-blur",t,this)}',
      focus: [
        '[function] t=>{e.emit("browser-window-focus",t,this)}',
        '[function] function(arg) {\n' +
          '      focusedWindow = w;\n' +
          '      updateDarwinAppMenu();\n' +
          '      saveWindowRect(getWindowRect(w));\n' +
          '      var index = getWindowIndex(w);\n' +
          '      if (index !== -1 && windows[index].projectCode !== undefined) {\n' +
          '        // Sending this IPC command before the window is ready breaks it\n' +
          '        // somehow.  (i.e. If we unconditionally send it to windows that\n' +
          '        // are focused, then a new window will have a broken __dirname.)\n' +
          '        w.webContents.send("set-active-project-cookie");\n' +
          '      }\n' +
          '    }'
      ],
      show: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      hide: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      minimize: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      maximize: [
        '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
        '[function] function() {\n      multiLog("windowMaximized!; ");\n    }'
      ],
      restore: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      unmaximize: '[function] function() {\n      multiLog("windowUnMaximized!; ");\n    }',
      closed: '[function] function() {\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1) windows.splice(index, 1);\n' +
        '      if (focusedWindow === w) focusedWindow = null;\n' +
        '      updateDarwinAppMenu();\n' +
        '      fireOpenScriptsChanged();\n' +
        '    }',
      close: '[function] function(event) {\n' +
        '      multiLog("Closing...");\n' +
        '      console.log({ w, focusedWindow });\n' +
        '      if (w === focusedWindow) {\n' +
        '        multiLog("Saving Window Rect!");\n' +
        '        saveWindowRect(getWindowRect(w));\n' +
        '      }\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1 && !windows[index].isClosingForcibly) {\n' +
        '        w.webContents.send("try-close-window");\n' +
        '        event.preventDefault();\n' +
        '      }\n' +
        '    }'
    },
    _eventsCount: 10,
    devToolsWebContents: null
  }
}
[2025-06-05 11:09:47.072] [info] autoDownload re-enabled!
[2025-06-05 11:09:47.106] [info] {
  windowRect: {
    x: 136,
    y: 91,
    width: 1270,
    height: 733,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 11:09:47.501] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 11:09:47.503] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-05 11:09:54.908] [info] Closing...
[2025-06-05 11:09:54.912] [info] Saving Window Rect!
[2025-06-05 11:09:54.914] [info] {
  windowRect: {
    x: 136,
    y: 91,
    width: 1270,
    height: 733,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-05 11:09:56.962] [info] Closing...
[2025-06-05 11:09:56.965] [info] Saving Window Rect!
[2025-06-05 11:09:56.966] [info] {
  windowRect: {
    x: 136,
    y: 91,
    width: 1270,
    height: 733,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:00:30.900] [info] { IS_ROCKSTEADY: false, EDITION: 'WriterSolo-Desktop' }
[2025-06-27 19:00:30.999] [info] {}
[2025-06-27 19:00:31.000] [info] { IS_PRODUCTION: true }
[2025-06-27 19:00:31.051] [info] App starting ...
[2025-06-27 19:00:31.051] [info] Checking for update
[2025-06-27 19:00:31.052] [info] Checking for update...
[2025-06-27 19:00:31.053] [info] undefined
[2025-06-27 19:00:31.329] [info] Serving files for production
[2025-06-27 19:00:31.330] [info] Serving files for production
[2025-06-27 19:00:31.336] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-27 19:00:31.337] [info] { desktopAppPath: '/opt/WriterSolo/resources/app.asar/script/' }
[2025-06-27 19:00:31.492] [info] Checking for update (already in progress)
[2025-06-27 19:00:31.516] [error] Error: Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-27 19:00:31.517] [info] Error in auto-updater. Error: ENOENT: no such file or directory, open '/opt/WriterSolo/resources/app-update.yml'
[2025-06-27 19:00:31.521] [info] {
  mainWindow: {
    setBounds: '[function] (e,...r)=>{e={...this.getBounds(),...e},t.call(this,e,...r)}',
    _events: {
      blur: '[function] t=>{e.emit("browser-window-blur",t,this)}',
      focus: [
        '[function] t=>{e.emit("browser-window-focus",t,this)}',
        '[function] function(arg) {\n' +
          '      focusedWindow = w;\n' +
          '      updateDarwinAppMenu();\n' +
          '      saveWindowRect(getWindowRect(w));\n' +
          '      var index = getWindowIndex(w);\n' +
          '      if (index !== -1 && windows[index].projectCode !== undefined) {\n' +
          '        // Sending this IPC command before the window is ready breaks it\n' +
          '        // somehow.  (i.e. If we unconditionally send it to windows that\n' +
          '        // are focused, then a new window will have a broken __dirname.)\n' +
          '        w.webContents.send("set-active-project-cookie");\n' +
          '      }\n' +
          '    }'
      ],
      show: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      hide: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      minimize: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      maximize: [
        '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
        '[function] function() {\n      multiLog("windowMaximized!; ");\n    }'
      ],
      restore: '[function] ()=>{const e=this.isVisible()&&!this.isMinimized();if(n!==e){n=e;const t=n?"visible":"hidden";this.webContents.emit("-window-visibility-change",t)}}',
      unmaximize: '[function] function() {\n      multiLog("windowUnMaximized!; ");\n    }',
      closed: '[function] function() {\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1) windows.splice(index, 1);\n' +
        '      if (focusedWindow === w) focusedWindow = null;\n' +
        '      updateDarwinAppMenu();\n' +
        '      fireOpenScriptsChanged();\n' +
        '    }',
      close: '[function] function(event) {\n' +
        '      multiLog("Closing...");\n' +
        '      console.log({ w, focusedWindow });\n' +
        '      if (w === focusedWindow) {\n' +
        '        multiLog("Saving Window Rect!");\n' +
        '        saveWindowRect(getWindowRect(w));\n' +
        '      }\n' +
        '      var index = getWindowIndex(w);\n' +
        '      if (index !== -1 && !windows[index].isClosingForcibly) {\n' +
        '        w.webContents.send("try-close-window");\n' +
        '        event.preventDefault();\n' +
        '      }\n' +
        '    }'
    },
    _eventsCount: 10,
    devToolsWebContents: null
  }
}
[2025-06-27 19:00:31.526] [info] autoDownload re-enabled!
[2025-06-27 19:00:31.542] [info] {
  windowRect: {
    x: 136,
    y: 79,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:00:32.122] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-27 19:00:32.124] [info] An error occurred:  Error: Invalid header: Does not start with Cr24
    at crxToZip (/opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:32:15)
    at /opt/WriterSolo/resources/app.asar/node_modules/unzip-crx-3/dist/index.js:69:32
    at callHanler (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:719:16)
    at tryCatcher (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:436:32)
    at /opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:575:38
    at flush (/opt/WriterSolo/resources/app.asar/node_modules/yaku/lib/yaku.js:478:17)
    at processTicksAndRejections (internal/process/task_queues.js:79:11)
[2025-06-27 19:00:48.808] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:01:29.071] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:02:53.828] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:08:33.547] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:15:03.516] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:15:16.804] [info] Closing...
[2025-06-27 19:15:16.806] [info] Saving Window Rect!
[2025-06-27 19:15:16.807] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
[2025-06-27 19:15:20.119] [info] Closing...
[2025-06-27 19:15:20.121] [info] Saving Window Rect!
[2025-06-27 19:15:20.122] [info] {
  windowRect: {
    x: 106,
    y: 38,
    width: 1273,
    height: 737,
    isFullScreen: false,
    isMaximized: false
  }
}
