(()=>{const e=Date.prototype.getTimezoneOffset,t=["_date","_offset","getTime","setTime","getTimezoneOffset","toJSON","valueOf","constructor","toString","toGMTString","toISOString","getUTCDay","getUTCDate","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCFullYear","getUTCMilliseconds","toTimeString","toLocaleString","toLocaleTimeString","toLocaleDateString"],o=Object.getOwnPropertyNames(Date.prototype).filter((function(e){return-1===t.indexOf(e)})),r=function(e){const t=function(e){return(e<10?"0":"")+e};return(e<=0?"+":"-")+t(Math.abs(e)/60|0)+t(Math.abs(e)%60)};Object.defineProperty(Date.prototype,"_offset",{configurable:!0,get(){return e.call(this)}}),Object.defineProperty(Date.prototype,"_date",{configurable:!0,get(){return void 0!==this._newdate?this._newdate:new Date(this.getTime()+60*(this._offset- -60)*1e3)}}),Date.prototype.getTimezoneOffset=new Proxy(Date.prototype.getTimezoneOffset,{apply:(e,t,o)=>isNaN(t)?Reflect.apply(e,t,o):-60}),Date.prototype.toString=new Proxy(Date.prototype.toString,{apply:(e,t,o)=>isNaN(t)?Reflect.apply(e,t,o):t.toDateString()+" "+t.toTimeString()}),Date.prototype.toLocaleString=new Proxy(Date.prototype.toLocaleString,{apply:(e,t,o)=>(o[1]=void 0!==o[1]?o[1]:{},o[1].timeZone="Europe/Madrid",Reflect.apply(e,t,o))}),Date.prototype.toLocaleDateString=new Proxy(Date.prototype.toLocaleDateString,{apply:(e,t,o)=>(o[1]=void 0!==o[1]?o[1]:{},o[1].timeZone="Europe/Madrid",Reflect.apply(e,t,o))}),Date.prototype.toLocaleTimeString=new Proxy(Date.prototype.toLocaleTimeString,{apply:(e,t,o)=>(o[1]=void 0!==o[1]?o[1]:{},o[1].timeZone="Europe/Madrid",Reflect.apply(e,t,o))}),Date.prototype.toTimeString=new Proxy(Date.prototype.toTimeString,{apply(e,t,o){const a=Reflect.apply(e,t._date,o),p=new Date,n=new Intl.DateTimeFormat("en-US",{timeZoneName:"long",timeZone:"Europe/Madrid"}).format(p).split(", ")[1],i=r(t._offset),l=r("-60"),y=`(${n})`;return isNaN(t)?Reflect.apply(e,t,o):a.replace(i,l).replace(/\(.*\)/,y)}}),o.forEach((function(e){-1!==["setHours","setMinutes","setMonth","setDate","setYear","setFullYear"].indexOf(e)?Date.prototype[e]=new Proxy(Date.prototype[e],{apply(e,t,o){if(isNaN(t))return Reflect.apply(e,t,o);{const r=t._date.getTime(),a=Reflect.apply(e,t._date,o);return t.setTime(t.getTime()+a-r)}}}):-1!==["setUTCDate","setUTCFullYear","setUTCHours","setUTCMinutes","setUTCMonth"].indexOf(e)||(Date.prototype[e]=new Proxy(Date.prototype[e],{apply:(e,t,o)=>isNaN(t)?Reflect.apply(e,t,o):Reflect.apply(e,t._date,o)}))})),Intl.DateTimeFormat.prototype.resolvedOptions=new Proxy(Intl.DateTimeFormat.prototype.resolvedOptions,{apply(e,t,o){const r=Reflect.apply(e,t,o);return r.timeZone="Europe/Madrid",r}}),Intl.DateTimeFormat=new Proxy(Intl.DateTimeFormat,{apply:(e,t,o)=>(o[1]=void 0!==o[1]?o[1]:{},o[1].timeZone="Europe/Madrid",Reflect.apply(e,t,o)),construct:(e,t,o)=>(t[1]=void 0!==t[1]?t[1]:{},t[1].timeZone="Europe/Madrid",Reflect.construct(e,t,o))})})();