import{broadcastMessage,hostnamesFromMatches,isDescendantHostnameOfIter,toBroaderHostname}from"./utils.js";import{browser,localRead,localWrite,sessionRead,sessionWrite}from"./ext.js";import{adminReadEx}from"./admin.js";import{filteringModesToDNR}from"./ruleset-manager.js";export const MODE_NONE=0;export const MODE_BASIC=1;export const MODE_OPTIMAL=2;export const MODE_COMPLETE=3;const pruneDescendantHostnamesFromSet=(e,t)=>{for(const a of t)!1!==a.endsWith(e)&&a!==e&&"."===a.at(-e.length-1)&&t.delete(a)},pruneHostnameFromSet=(e,t)=>{let a=e;for(;t.delete(a),a=toBroaderHostname(a),"*"!==a;);},serializeModeDetails=e=>({none:Array.from(e.none),basic:Array.from(e.basic),optimal:Array.from(e.optimal),complete:Array.from(e.complete)}),unserializeModeDetails=e=>({none:new Set(e.none),basic:new Set(e.basic??e.network),optimal:new Set(e.optimal??e.extendedSpecific),complete:new Set(e.complete??e.extendedGeneric)});function lookupFilteringMode(e,t){const{none:a,basic:i,optimal:s,complete:l}=e;return"all-urls"===t?e.none.has("all-urls")?0:e.basic.has("all-urls")?1:e.optimal.has("all-urls")?2:e.complete.has("all-urls")?3:1:a.has(t)||!1===a.has("all-urls")&&isDescendantHostnameOfIter(t,a)?0:i.has(t)||!1===i.has("all-urls")&&isDescendantHostnameOfIter(t,i)?1:s.has(t)||!1===s.has("all-urls")&&isDescendantHostnameOfIter(t,s)?2:l.has(t)||!1===l.has("all-urls")&&isDescendantHostnameOfIter(t,l)?3:lookupFilteringMode(e,"all-urls")}function applyFilteringMode(e,t,a){const i=lookupFilteringMode(e,"all-urls");if("all-urls"===t){if(a===i)return a;switch(a){case 0:e.none.clear(),e.none.add("all-urls");break;case 1:e.basic.clear(),e.basic.add("all-urls");break;case 2:e.optimal.clear(),e.optimal.add("all-urls");break;case 3:e.complete.clear(),e.complete.add("all-urls")}switch(i){case 0:e.none.delete("all-urls");break;case 1:e.basic.delete("all-urls");break;case 2:e.optimal.delete("all-urls");break;case 3:e.complete.delete("all-urls")}return lookupFilteringMode(e,"all-urls")}const s=lookupFilteringMode(e,t);if(a===s)return a;const{none:l,basic:r,optimal:n,complete:o}=e;switch(s){case 0:pruneHostnameFromSet(t,l);break;case 1:pruneHostnameFromSet(t,r);break;case 2:pruneHostnameFromSet(t,n);break;case 3:pruneHostnameFromSet(t,o)}if(a!==i)switch(a){case 0:!1===isDescendantHostnameOfIter(t,l)&&(e.none.add(t),pruneDescendantHostnamesFromSet(t,l));break;case 1:!1===isDescendantHostnameOfIter(t,r)&&(e.basic.add(t),pruneDescendantHostnamesFromSet(t,r));break;case 2:!1===isDescendantHostnameOfIter(t,n)&&(e.optimal.add(t),pruneDescendantHostnamesFromSet(t,n));break;case 3:!1===isDescendantHostnameOfIter(t,o)&&(e.complete.add(t),pruneDescendantHostnamesFromSet(t,o))}return lookupFilteringMode(e,t)}export async function readFilteringModeDetails(e=!1){if(!1===e){if(readFilteringModeDetails.cache)return readFilteringModeDetails.cache;const e=await sessionRead("filteringModeDetails");if(e instanceof Object)return readFilteringModeDetails.cache=unserializeModeDetails(e),readFilteringModeDetails.cache}let[t,a]=await Promise.all([localRead("filteringModeDetails"),adminReadEx("noFiltering")]);if(void 0===t&&(t={basic:["all-urls"]}),t=unserializeModeDetails(t),Array.isArray(a)){a.includes("-*")&&t.none.clear();for(const e of a)"-"===e.charAt(0)?t.none.delete(e.slice(1)):applyFilteringMode(t,e,0)}return filteringModesToDNR(t),sessionWrite("filteringModeDetails",serializeModeDetails(t)),readFilteringModeDetails.cache=t,t}async function writeFilteringModeDetails(e){await filteringModesToDNR(e);const t=serializeModeDetails(e);return localWrite("filteringModeDetails",t),sessionWrite("filteringModeDetails",t),readFilteringModeDetails.cache=unserializeModeDetails(t),Promise.all([getDefaultFilteringMode(),getTrustedSites(),localWrite("filteringModeDetails",t),sessionWrite("filteringModeDetails",t)]).then((e=>{broadcastMessage({defaultFilteringMode:e[0],trustedSites:Array.from(e[1])})}))}export async function getFilteringModeDetails(){const e=await readFilteringModeDetails();return{none:new Set(e.none),basic:new Set(e.basic),optimal:new Set(e.optimal),complete:new Set(e.complete)}}export async function getFilteringMode(e){return lookupFilteringMode(await getFilteringModeDetails(),e)}export async function setFilteringMode(e,t){const a=await getFilteringModeDetails(),i=applyFilteringMode(a,e,t);return await writeFilteringModeDetails(a),i}export function getDefaultFilteringMode(){return getFilteringMode("all-urls")}export function setDefaultFilteringMode(e){return setFilteringMode("all-urls",e)}export async function getTrustedSites(){return(await getFilteringModeDetails()).none}export async function setTrustedSites(e){const t=await getFilteringModeDetails(),{none:a}=t,i=new Set(e);let s=!1;a.has("all-urls")&&!1===i.has("all-urls")&&(applyFilteringMode(t,"all-urls",1),s=!0);for(const e of a)i.has(e)?i.delete(e):(a.delete(e),s=!0);for(const e of i){0===applyFilteringMode(t,e,0)&&(s=!0)}if(!1!==s)return writeFilteringModeDetails(t)}export async function syncWithBrowserPermissions(){const[e,t]=await Promise.all([browser.permissions.getAll(),getDefaultFilteringMode()]),a=new Set(hostnamesFromMatches(e.origins||[]));let i=!1;t>1&&!1===a.has("all-urls")&&(await setDefaultFilteringMode(1),i=!0);if(await getDefaultFilteringMode()>1)return!1;const s=await getFilteringModeDetails(),{optimal:l,complete:r}=s;for(const e of l)a.has(e)||(l.delete(e),i=!0);for(const e of r)a.has(e)||(r.delete(e),i=!0);return await writeFilteringModeDetails(s),i}