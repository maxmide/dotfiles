export function urlSkip(e,t,r,s={}){try{let n=!1,c=e;for(const e of r){const t=c,r=e.charCodeAt(0);if(35!==r||"#"!==e)if(38!==r)if(43!==r||"+https"!==e){if(45===r){if("-base64"===e){c=self.atob(t);continue}if("-safebase64"===e){void 0===urlSkip.safeBase64Replacer&&(urlSkip.safeBase64Map={"-":"+",_:"/"},urlSkip.safeBase64Replacer=e=>urlSkip.safeBase64Map[e]),c=t.replace(/[-_]/g,urlSkip.safeBase64Replacer),c=self.atob(c);continue}if("-uricomponent"===e){c=decodeURIComponent(t);continue}if("-blocked"===e){n=!0;continue}}if(47!==r){if(63!==r)return;if(c=new URL(t).searchParams.get(e.slice(1)),null===c)return;c.includes(" ")&&(c=c.replace(/ /g,"%20"))}else{const r=s.cache??new RegExp(e.slice(1,-1));null===s.cache&&(s.cache=r);const n=r.exec(t);if(null===n)return;if(n.length<=1)return;c=n[1]}}else{const e=t.replace(/^https?:\/\//,"");if(/^[\w-]:\/\//.test(e))return;c=`https://${e}`}else{const r=(parseInt(e.slice(1))||0)-1;if(r<0)return;const s=new URL(t);if(r>=s.searchParams.size)return;const n=Array.from(s.searchParams.keys());c=decodeURIComponent(n[r])}else{const e=t.indexOf("#");c=-1!==e?t.slice(e+1):""}}const a=new URL(c);if("https:"!==a.protocol){if("http:"!==a.protocol)return;c=c.replace("http","https")}if(t&&!0!==n)return;return c}catch{}}