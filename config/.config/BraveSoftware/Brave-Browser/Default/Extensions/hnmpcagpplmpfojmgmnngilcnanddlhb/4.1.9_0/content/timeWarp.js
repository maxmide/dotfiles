export default function(e){const t=Date.prototype.getTimezoneOffset,o=["_date","_offset","getTime","setTime","getTimezoneOffset","toJSON","valueOf","constructor","toString","toGMTString","toISOString","getUTCDay","getUTCDate","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCFullYear","getUTCMilliseconds","toTimeString","toLocaleString","toLocaleTimeString","toLocaleDateString"],a=Object.getOwnPropertyNames(Date.prototype).filter((function(e){return-1===o.indexOf(e)})),n=function(e){const t=function(e){return(e<10?"0":"")+e};return(e<=0?"+":"-")+t(Math.abs(e)/60|0)+t(Math.abs(e)%60)};Object.defineProperty(Date.prototype,"_offset",{configurable:!0,get(){return t.call(this)}}),Object.defineProperty(Date.prototype,"_date",{configurable:!0,get(){return void 0!==this._newdate?this._newdate:new Date(this.getTime()+60*(this._offset-e.offset)*1e3)}}),Date.prototype.getTimezoneOffset=new Proxy(Date.prototype.getTimezoneOffset,{apply:(t,o,a)=>isNaN(o)?Reflect.apply(t,o,a):e.offset}),Date.prototype.toString=new Proxy(Date.prototype.toString,{apply:(e,t,o)=>isNaN(t)?Reflect.apply(e,t,o):t.toDateString()+" "+t.toTimeString()}),Date.prototype.toLocaleString=new Proxy(Date.prototype.toLocaleString,{apply:(t,o,a)=>(a[1]=void 0!==a[1]?a[1]:{},a[1].timeZone=e.timezone,Reflect.apply(t,o,a))}),Date.prototype.toLocaleDateString=new Proxy(Date.prototype.toLocaleDateString,{apply:(t,o,a)=>(a[1]=void 0!==a[1]?a[1]:{},a[1].timeZone=e.timezone,Reflect.apply(t,o,a))}),Date.prototype.toLocaleTimeString=new Proxy(Date.prototype.toLocaleTimeString,{apply:(t,o,a)=>(a[1]=void 0!==a[1]?a[1]:{},a[1].timeZone=e.timezone,Reflect.apply(t,o,a))}),Date.prototype.toTimeString=new Proxy(Date.prototype.toTimeString,{apply(t,o,a){const r=Reflect.apply(t,o._date,a),p=new Date,i=new Intl.DateTimeFormat("en-AU",{timeZoneName:"long",timeZone:e.name}).format(p).split(", ")[1],l=n(o._offset),s=n(e.offset),y=`(${i})`;return isNaN(o)?Reflect.apply(t,o,a):r.replace(l,s).replace(/\(.*\)/,y)}}),a.forEach((function(e){-1!==["setHours","setMinutes","setMonth","setDate","setYear","setFullYear"].indexOf(e)?Date.prototype[e]=new Proxy(Date.prototype[e],{apply(e,t,o){if(isNaN(t))return Reflect.apply(e,t,o);{const a=t._date.getTime(),n=Reflect.apply(e,t._date,o);return t.setTime(t.getTime()+n-a)}}}):-1!==["setUTCDate","setUTCFullYear","setUTCHours","setUTCMinutes","setUTCMonth"].indexOf(e)||(Date.prototype[e]=new Proxy(Date.prototype[e],{apply:(e,t,o)=>isNaN(t)?Reflect.apply(e,t,o):Reflect.apply(e,t._date,o)}))})),Intl.DateTimeFormat.prototype.resolvedOptions=new Proxy(Intl.DateTimeFormat.prototype.resolvedOptions,{apply(t,o,a){const n=Reflect.apply(t,o,a);return n.timeZone=e.timezone,n}}),Intl.DateTimeFormat=new Proxy(Intl.DateTimeFormat,{apply:(t,o,a)=>(a[1]=void 0!==a[1]?a[1]:{},a[1].timeZone=e.timezone,Reflect.apply(t,o,a)),construct:(t,o,a)=>(o[1]=void 0!==o[1]?o[1]:{},o[1].timeZone=e.timezone,Reflect.construct(t,o,a))})}